//Adding a line to import google font in CSS (vs HTML like I had done the first time)
@import url('https://fonts.googleapis.com/css?family=Montserrat:400,700');

$colors: (
    primary: #005dff,
    /*lighten() is a built in CSS function to referencially change colors by a specified % */
    primary-light: lighten(#005dff, 40%),
    /* shift+alt+down arrow copies the selcted line and pastes (inserts) it on the next line down */
    primary-dark: darken(#005dff, 40%),
    accent: #FFF6bb   
); 

/* Creating  a variable called padding and assigning it a property */
$padding: 15px;

$borders: 15px;

/* Color funtion declared with @ symbol to replace map-get repitition */
@function color($color-name){
    @return map-get($colors, $color-name);

}

/*define a pixel-based variable for a breakpoint so there's a responsivness to the width (mobile vs PC) */
$desktop: 840px;

/*defining a mixin apply styles for when the width of the window is 840px or more */
@mixin desktop{
    @media (min-width: #{$desktop}){
        @content;
    }
}


body, html {
    height: 100%;

}


body {
    font-family: 'Montserrat';
    margin: 0;
    
    #bg {
        clip-path: polygon(100% 0, 100% 82%, 45% 100%, 0 100%, 0 0);
        background-color: color(primary);
        width: 100%;
        height: 100%;
        position: absolute;
        z-index: -1;

        /*this is how we use our mixins (and how we reference them) */
        @include desktop {
            clip-path: polygon(0 0, 75% 0, 55% 100%, 0% 100%);
        }
    }

    header a {
        color: #fff;
        text-decoration: none;
        padding: $padding;
        display: block;
        text-transform: uppercase;
    }
}

/* Placing main element style down here just so we don't over-nest our code */

main {

    /*setting up mixin for the grids (non-stack layout) for desktop users */
    @include desktop {
        display: grid;
        grid-template-columns: 50% auto;
        /*defines the two names (primary & card) for grid-template-areas */
        grid-template-areas: 
            "primary card";
    }

    /*referencing the "card" id of element "section" */
    section#card {
        background-color: white;
        padding: 20px;
        /*Use of "auto" in margin centers the text */
        margin: 1em auto;
        /*box-shadow: [x] [y] [blur] [color (the last .2 is for opacity)] */
        box-shadow: 0 10px 30px rgba(0,0,0,.2);
        width: 80%;

        @include desktop {
            grid-area: card;
            height: fit-content;
            align-self: center;
            margin: 1em;
        }
        
        /*ul stands for unordered list */
        ul {
            /*Get rid of bullet points */
            list-style-type: none;
            margin: 0; padding: 0;
        
            /*li stands for list item*/
            li {
                margin-bottom: 10px;
            }
                span {
                    position: absolute;
                    width: 30px;
                    height: 30px;
                    background-color: color(primary-light);
                    border-radius: 50px;
                    margin-right: 10px;
                }
                strong {
                    display: inline-block;
                    margin-left: max(40px);
                    margin-top: 10px;
                }
        }

    }

    section#primary {
        color: white;
        padding: $padding;
        text-align: center;

        @include desktop {
            grid-area: primary;
            /*because it's centered currently on mobile */
            /*margin is [top] [right] [bottom] [left] */
            margin: 4em 0 0 4em;
             
        }


        h1 {
            font-size: 3em;
            margin-top: 10px;
            text-transform: uppercase;
           
            @include desktop {
                /*Changing width so that each word has its own line */
                width: 30%;
                font-size: 4em;
                /*use this to bring the lines closer together */
                line-height: .9em;
            }
        }
    
        p {
            font-size: 1.4em;
        }

        a {
            color: color(primary-dark);
            border-radius: $borders;
            text-decoration: none;
            text-transform: uppercase;
            font-weight: bold;
            background-color: color(accent);
            display: block;
            text-align: center;
            /*margin [top] [right] [bottom] [left] - having both left and right = auto will center it   */
            margin: 50x auto 0 auto;
            padding: $padding;

            @include desktop {
                /*used to keep this section from expanding the entire container */
                display: inline-block;
                /*[top/bottom] padding = $padding, [right/left] = $padding * 4 (we can do math in Sass) */
                padding: $padding $padding * 4;
            }

        }
    }

}